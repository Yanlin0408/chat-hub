{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/yanlinchen/Documents/CHAT-hub/chat-hub/mobile/screens/RegisterScreen.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useLayoutEffect, useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport { StatusBar } from \"expo-status-bar\";\nimport DarkTheme from \"../constant/darkTheme\";\nimport { Input, Image, Button } from \"react-native-elements\";\nimport LoginScreen from \"./LoginScreen\";\nimport InputStyle from \"../constant/inputContainer\";\nimport io from \"socket.io-client\";\nimport * as firebase from \"firebase\";\nimport { auth } from \"../firebase\";\n\nvar RegisterScreen = function RegisterScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      name = _useState4[0],\n      setName = _useState4[1];\n\n  var _useState5 = useState(\"123123\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      password = _useState6[0],\n      setPassword = _useState6[1];\n\n  var _useState7 = useState(\"\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      imageUrl = _useState8[0],\n      setImageUrl = _useState8[1];\n\n  var socket = io(\"http://192.168.1.71:3000/\");\n  socket.connect();\n  socket.emit(\"yo\", \"heyheyhey\");\n\n  var register = function register() {\n    auth.createUserWithEmailAndPassword(email, password).then(function (authUser) {\n      console.log(authUser.user);\n      authUser.user.updateProfile({\n        displayName: name,\n        photoURL: imageUrl || \"http://img.crcz.com/allimg/202003/03/1583242569661699.jpg\"\n      });\n    }).catch(function (error) {\n      return alert(error.message);\n    });\n  };\n\n  useLayoutEffect(function () {\n    navigation.setOptions({\n      headerBackTitle: \"back\",\n      headerStyle: {\n        backgroundColor: DarkTheme.grey\n      },\n      headerTitleStyle: {\n        marginLeft: 10,\n        fontSize: 20\n      }\n    });\n  }, [navigation]);\n  return React.createElement(KeyboardAvoidingView, {\n    behavior: Platform.OS === \"ios\" ? \"padding\" : \"height\",\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, React.createElement(TouchableWithoutFeedback, {\n    onPress: Keyboard.dismiss,\n    style: styles.touchable,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }\n  }, React.createElement(StatusBar, {\n    style: \"light\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 21\n    }\n  }), React.createElement(Text, {\n    style: {\n      height: 40,\n      textAlign: \"center\",\n      fontSize: 26,\n      color: DarkTheme.grey,\n      borderRadius: 3,\n      marginBottom: 20,\n      backgroundColor: DarkTheme.black\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 21\n    }\n  }, \"create a chathub account\"), React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 21\n    }\n  }, React.createElement(StatusBar, {\n    style: \"light\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 25\n    }\n  }), React.createElement(TextInput, {\n    autofocus: true,\n    value: name,\n    placeholder: \"Full name\",\n    placeholderTextColor: DarkTheme.grey,\n    style: styles.input,\n    onChangeText: function onChangeText(text) {\n      return setName(text);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 25\n    }\n  }), React.createElement(TextInput, {\n    value: email,\n    placeholder: \"Email\",\n    placeholderTextColor: DarkTheme.grey,\n    style: styles.input,\n    onChangeText: function onChangeText(text) {\n      return setEmail(text);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 25\n    }\n  }), React.createElement(TextInput, {\n    value: imageUrl,\n    placeholder: \"Profile Picture Url (optional)\",\n    placeholderTextColor: DarkTheme.grey,\n    style: styles.input,\n    onChangeText: function onChangeText(text) {\n      return setImageUrl(text);\n    },\n    onSubmitEditing: register,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 25\n    }\n  }), React.createElement(Button, {\n    title: \"Register\",\n    buttonStyle: {\n      backgroundColor: DarkTheme.orange\n    },\n    titleStyle: {\n      color: \"black\"\n    },\n    containerStyle: {\n      width: \"100%\",\n      marginVertical: 10\n    },\n    onPress: register,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 25\n    }\n  }), React.createElement(View, {\n    style: {\n      height: 80\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 25\n    }\n  })))));\n};\n\nexport default RegisterScreen;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: DarkTheme.black,\n    justifyContent: \"center\",\n    padding: 20\n  },\n  input: _objectSpread({}, InputStyle)\n});","map":{"version":3,"sources":["/Users/yanlinchen/Documents/CHAT-hub/chat-hub/mobile/screens/RegisterScreen.js"],"names":["React","useState","useLayoutEffect","useEffect","StatusBar","DarkTheme","Input","Image","Button","LoginScreen","InputStyle","io","firebase","auth","RegisterScreen","navigation","email","setEmail","name","setName","password","setPassword","imageUrl","setImageUrl","socket","connect","emit","register","createUserWithEmailAndPassword","then","authUser","console","log","user","updateProfile","displayName","photoURL","catch","error","alert","message","setOptions","headerBackTitle","headerStyle","backgroundColor","grey","headerTitleStyle","marginLeft","fontSize","Platform","OS","styles","container","Keyboard","dismiss","touchable","height","textAlign","color","borderRadius","marginBottom","black","input","text","orange","width","marginVertical","StyleSheet","create","flex","justifyContent","padding"],"mappings":"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","sourcesContent":["import React, {useState, useLayoutEffect, useEffect} from 'react'\nimport { StyleSheet,Platform, TextInput, Text, View, KeyboardAvoidingView, TouchableWithoutFeedback, Keyboard } from 'react-native'\nimport {StatusBar} from \"expo-status-bar\"\nimport DarkTheme from \"../constant/darkTheme\"\nimport { Input, Image, Button} from \"react-native-elements\"\nimport LoginScreen from \"./LoginScreen\"\nimport InputStyle from \"../constant/inputContainer\"\nimport io from \"socket.io-client\"\nimport * as firebase from \"firebase\";\nimport {auth} from \"../firebase\"\n\nconst RegisterScreen = ({navigation}) => {\n    const [email, setEmail] = useState(\"\");\n    const [name, setName] = useState(\"\");\n    const [password, setPassword] = useState(\"123123\");\n    const [imageUrl, setImageUrl] = useState(\"\");\n\n    const socket = io(\"http://192.168.1.71:3000/\");\n    socket.connect();\n    socket.emit(\"yo\",\"heyheyhey\");\n\n    const register = () => {\n        auth\n        .createUserWithEmailAndPassword(email, password)   //probably have some problem\n        .then((authUser) => {\n            console.log(authUser.user);\n            // console.log(\"---------yo---\",password);\n            // console.log(\"---------yo---\",name);\n            // console.log(\"===== displayname\")\n            // console.log(authUser.user.displayName);\n            // console.log(\"===== providedrID\")\n            // console.log(authUser.user.providerData);\n            // console.log(\"---------------------\");\n            authUser.user.updateProfile({\n                displayName: name,\n                photoURL: imageUrl || \"http://img.crcz.com/allimg/202003/03/1583242569661699.jpg\",\n            });\n        })\n        .catch((error) => alert(error.message));\n    };\n\n    useLayoutEffect(() => {\n        navigation.setOptions({\n            //headerTitle: \"login\",\n            headerBackTitle: \"back\",\n            headerStyle: {\n                backgroundColor: DarkTheme.grey,\n            },\n            headerTitleStyle: {\n                marginLeft: 10,\n                fontSize: 20,\n            },\n        //     headerLeft: () => (\n        //     <Button style = {{marginLeft:40}} onPress={() => navigation.navigate({name: LoginScreen})} />\n        //   ),\n        });\n        \n    }, [navigation]);\n\n    return (\n        <KeyboardAvoidingView behavior={Platform.OS === \"ios\" ? \"padding\" : \"height\"} style = {styles.container}>\n            <TouchableWithoutFeedback onPress={Keyboard.dismiss} style = {styles.touchable}>\n                <View>\n                    <StatusBar style = \"light\"/>\n                    <Text \n                    style = {{\n                        height:40, \n                        textAlign:\"center\", \n                        fontSize:26, \n                        color:DarkTheme.grey, \n                        borderRadius: 3, \n                        marginBottom: 20, \n                        backgroundColor: DarkTheme.black}}>create a chathub account</Text>\n                    <View>\n                        <StatusBar style = \"light\"/>\n                        <TextInput\n                            autofocus\n                            value = {name}\n                            placeholder = \"Full name\"\n                            placeholderTextColor={DarkTheme.grey} \n                            style = {styles.input}\n                            onChangeText = {(text) => setName(text)}\n                        />\n                        <TextInput\n                            value = {email}\n                            placeholder = \"Email\"\n                            placeholderTextColor={DarkTheme.grey}\n                            style = {styles.input}\n                            onChangeText = {(text) => setEmail(text)}\n                        />\n                        {/* <TextInput\n                            secureTextEntry\n                            value = {password}\n                            placeholder = \"Password\"\n                            placeholderTextColor={DarkTheme.grey}\n                            style = {styles.input}\n                            onChangeText = {(text) => setPassword(text)}\n                        /> */}\n                        {/* <Input\n                            placeholder=\"password\"\n                            type = \"password\"\n                            secureTextEntry\n                            value={password}\n                            onChangeText={(text) => setPassword(text)}\n                        /> */}\n                        <TextInput\n                            value = {imageUrl}\n                            placeholder = \"Profile Picture Url (optional)\"\n                            placeholderTextColor={DarkTheme.grey}\n                            style = {styles.input}\n                            onChangeText = {(text) => setImageUrl(text)}\n                            onSubmitEditing = {register}\n                        />\n                        <Button\n                            title=\"Register\"\n                            buttonStyle={{\n                            backgroundColor: DarkTheme.orange,\n                            }}\n                            titleStyle={{ color: \"black\" }}\n                            containerStyle={{\n                            width: \"100%\",\n                            marginVertical: 10,\n                            }}\n                            onPress = {register}\n                            />\n                        <View style = {{height:80}}/>\n                    </View>\n                </View>\n            \n            </TouchableWithoutFeedback>\n        </KeyboardAvoidingView>\n    )\n}\n\nexport default RegisterScreen\n\nconst styles = StyleSheet.create({\n    container: {\n        flex:1,\n        backgroundColor: DarkTheme.black,\n        justifyContent: \"center\",\n        padding: 20,\n    },\n    input: {\n        ...InputStyle, \n        // width:300,\n    },\n})\n"]},"metadata":{},"sourceType":"module"}